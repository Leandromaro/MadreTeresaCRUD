/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package reportes;

import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import utilidades.Calendario;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author francis
 */
public class IngresosEgresos extends javax.swing.JFrame {

    /**
     * Creates new form Ingresos
     */
    public List lista = new ArrayList();
    public ConexionBD cc= new ConexionBD();
    public Connection cn;
    public IngresosEgresos() {
        super("Generaci√≥n de Informes");
        initComponents();
        
        //Seteamos los campos de fechas a las de hoy por defecto...
        SimpleDateFormat formatoDelTexto = new SimpleDateFormat("dd/MM/yyyy");
        Date hoy = new Date();
        jTFDesde.setText(formatoDelTexto.format(hoy));
        jTFHasta.setText(formatoDelTexto.format(hoy));
        jTFDesde1.setText(formatoDelTexto.format(hoy));
        jTFHasta1.setText(formatoDelTexto.format(hoy));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelIngresos = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFDesde = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFHasta = new javax.swing.JTextField();
        jBDesde = new javax.swing.JButton();
        jBHasta = new javax.swing.JButton();
        jBGenReportIngresos = new javax.swing.JButton();
        jPanelEgresos = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTFDesde1 = new javax.swing.JTextField();
        jBGenReportEgresos = new javax.swing.JButton();
        jComboBoxTipoGasto = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFHasta1 = new javax.swing.JTextField();
        jBDesde1 = new javax.swing.JButton();
        jBHasta1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelIngresos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Fecha Desde:");

        jTFDesde.setEditable(false);
        jTFDesde.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFDesdeMouseClicked(evt);
            }
        });

        jLabel2.setText("Hasta:");

        jTFHasta.setEditable(false);
        jTFHasta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFHastaMouseClicked(evt);
            }
        });

        jBDesde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/calendario.GIF"))); // NOI18N
        jBDesde.setContentAreaFilled(false);
        jBDesde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDesdeActionPerformed(evt);
            }
        });

        jBHasta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/calendario.GIF"))); // NOI18N
        jBHasta.setContentAreaFilled(false);
        jBHasta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHastaActionPerformed(evt);
            }
        });

        jBGenReportIngresos.setText("Generar Reporte");
        jBGenReportIngresos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGenReportIngresosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jBGenReportIngresos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jTFDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jTFHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jBGenReportIngresos, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanelIngresosLayout = new javax.swing.GroupLayout(jPanelIngresos);
        jPanelIngresos.setLayout(jPanelIngresosLayout);
        jPanelIngresosLayout.setHorizontalGroup(
            jPanelIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIngresosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelIngresosLayout.setVerticalGroup(
            jPanelIngresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIngresosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Ingresos", jPanelIngresos);

        jPanelEgresos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Fecha Desde:");

        jTFDesde1.setEditable(false);
        jTFDesde1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFDesde1MouseClicked(evt);
            }
        });

        jBGenReportEgresos.setText("Generar Reporte");
        jBGenReportEgresos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGenReportEgresosActionPerformed(evt);
            }
        });

        jComboBoxTipoGasto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hogar", "Comisi√≥n" }));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel5.setText("Seleccionar tipo de gasto:");

        jLabel4.setText("Hasta:");

        jTFHasta1.setEditable(false);
        jTFHasta1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFHasta1MouseClicked(evt);
            }
        });

        jBDesde1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/calendario.GIF"))); // NOI18N
        jBDesde1.setContentAreaFilled(false);
        jBDesde1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDesde1ActionPerformed(evt);
            }
        });

        jBHasta1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/calendario.GIF"))); // NOI18N
        jBHasta1.setContentAreaFilled(false);
        jBHasta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHasta1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxTipoGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFDesde1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBDesde1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFHasta1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBHasta1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jBGenReportEgresos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTFDesde1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jTFHasta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBDesde1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBHasta1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxTipoGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jBGenReportEgresos, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanelEgresosLayout = new javax.swing.GroupLayout(jPanelEgresos);
        jPanelEgresos.setLayout(jPanelEgresosLayout);
        jPanelEgresosLayout.setHorizontalGroup(
            jPanelEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEgresosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelEgresosLayout.setVerticalGroup(
            jPanelEgresosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEgresosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Egresos", jPanelEgresos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHastaActionPerformed
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFHasta).setVisible(true);
    }//GEN-LAST:event_jBHastaActionPerformed

    private void jBDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDesdeActionPerformed
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFDesde).setVisible(true);
    }//GEN-LAST:event_jBDesdeActionPerformed

    private void jBGenReportIngresosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGenReportIngresosActionPerformed
       
        SimpleDateFormat formatoDelTexto = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaD = null;
        Date fechaH=null;
        try {
            fechaD = formatoDelTexto.parse(jTFDesde.getText());
            fechaH = formatoDelTexto.parse(jTFHasta.getText());

        } catch (ParseException ex) {

             ex.printStackTrace();

        }
        //Comprueba que la fecha desde sea menor o igual a la de hasta
        if(fechaD.before(fechaH)  || fechaD.equals(fechaH)){     
            lista.removeAll(lista);
            String [] fd = jTFDesde.getText().split("/");
            String [] fh = jTFHasta.getText().split("/");
            Double totCuota =0.0;
            Double totDonac =0.0;
            Double totfv =0.0;
            Double totPublic =0.0;
            Double totTarj =0.0;
            Double totRif =0.0;
            ListaIngresos list;
            DecimalFormat df = new DecimalFormat("0.00##");        
            String sql = "SELECT YEAR(fechaPago) anio,MONTH(fechaPago) mes,SUM(monto) monto FROM cuotaSocial WHERE fechaPago BETWEEN '"+fd[2]+"-"+fd[1]+"-"+fd[0]+"' AND '"+
                    fh[2]+"-"+fh[1]+"-"+fh[0]+"' AND fechaPago IS NOT NULL GROUP BY YEAR(fechaPago),MONTH(fechaPago)";

             //Cuotas Sociales
            try {
                 cn = cc.conexion();
                 Statement st = cn.createStatement();
                 ResultSet rs = st.executeQuery(sql);             
                 while(rs.next()){
                     totCuota=totCuota+rs.getDouble("monto");
                     ListaIngresos ingresos= new ListaIngresos(rs.getString("mes").toString(),rs.getString("anio").toString(),"$"+rs.getString("monto").toString(),"---","---","---","---","---");
                     lista.add(ingresos);                
                 }
                 cn.close();

            } catch (SQLException ex) {
                Logger.getLogger(IngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Donaciones
            sql = "SELECT YEAR(fechaDonacion) anio,MONTH(fechaDonacion) mes,SUM(monto) monto FROM donaciones WHERE fechaDonacion BETWEEN '"+fd[2]+"-"+fd[1]+"-"+fd[0]+"' AND '"+
                    fh[2]+"-"+fh[1]+"-"+fh[0]+"' GROUP BY YEAR(fechaDonacion),MONTH(fechaDonacion)";
            totDonac=getConsulta(sql,"donac");      

             //Flores de vida
            sql = "SELECT YEAR(fechaPago) anio,MONTH(fechaPago) mes,SUM(monto) monto FROM cuotaFlorDeVida WHERE fechaPago BETWEEN '"+fd[2]+"-"+fd[1]+"-"+fd[0]+"' AND '"+
                    fh[2]+"-"+fh[1]+"-"+fh[0]+"' GROUP BY YEAR(fechaPago),MONTH(fechaPago)";
            totfv=getConsulta(sql, "flores");

            //Publicidades
            sql = "SELECT YEAR(fecha) anio,MONTH(fecha) mes,SUM(montoPublic) monto FROM eventos WHERE fecha BETWEEN '"+fd[2]+"-"+fd[1]+"-"+fd[0]+"' AND '"+
                    fh[2]+"-"+fh[1]+"-"+fh[0]+"' AND montoPublic IS NOT NULL GROUP BY YEAR(fecha),MONTH(fecha)";
            totPublic=getConsulta(sql, "public");

            //Rifas
            sql = "SELECT YEAR(fecha) anio,MONTH(fecha) mes,SUM(montoRifas) monto FROM eventos WHERE fecha BETWEEN '"+fd[2]+"-"+fd[1]+"-"+fd[0]+"' AND '"+
                    fh[2]+"-"+fh[1]+"-"+fh[0]+"' AND montoRifas IS NOT NULL GROUP BY YEAR(fecha),MONTH(fecha)";
            totRif=getConsulta(sql, "rifas");

            //Tarjetas
            sql = "SELECT YEAR(fecha) anio,MONTH(fecha) mes,SUM(montoTarjetas) monto FROM eventos WHERE fecha BETWEEN '"+fd[2]+"-"+fd[1]+"-"+fd[0]+"' AND '"+
                    fh[2]+"-"+fh[1]+"-"+fh[0]+"' AND montoTarjetas IS NOT NULL GROUP BY YEAR(fecha),MONTH(fecha)";
            totTarj=getConsulta(sql, "tarj");

            //Ordenamos la lista         
            Collections.sort(lista, new Comparator<ListaIngresos>() {
                @Override
                public int compare(ListaIngresos l1, ListaIngresos l2) {
                        return new Integer(Integer.parseInt(l1.getMes())).compareTo(new Integer(Integer.parseInt(l2.getMes())));
                }          
             });
            
            Collections.sort(lista, new Comparator<ListaIngresos>() {
                @Override
                public int compare(ListaIngresos l1, ListaIngresos l2) {
                        return new Integer(Integer.parseInt(l1.getAnio())).compareTo(new Integer(Integer.parseInt(l2.getAnio())));
                }          
             });

//            for(int i=0;i<lista.size();i++){
//                list = (ListaIngresos)lista.get(i);
//                list.setMes(retornaMes(Integer.parseInt(list.getMes())));
//
//            }
            //Creamos el informe
            try {            
                File fichero = new File("Ingresos.jasper");            
                JasperReport reporte= (JasperReport) JRLoader.loadObject(fichero);//(JasperReport) JRLoader.loadObject("Ingresos.jasper");

                Map parametro = new HashMap();
                parametro.put("fechaDesde", jTFDesde.getText());
                parametro.put("fechaHasta", jTFHasta.getText());
                parametro.put("totDonac", "$"+df.format(totDonac));
                parametro.put("totCuota", "$"+df.format(totCuota));
                parametro.put("totFV", "$"+df.format(totfv));
                parametro.put("totPublic", "$"+df.format(totPublic));
                parametro.put("totRifas", "$"+df.format(totRif));
                parametro.put("totTar", "$"+df.format(totTarj));
                parametro.put("total", "$"+df.format(totCuota+totDonac+totfv+totPublic+totRif+totTarj));
                JasperPrint jprint= JasperFillManager.fillReport(reporte, parametro,new JRBeanCollectionDataSource(lista));

                JasperViewer.viewReport(jprint,false);
            } catch (JRException ex) {
                Logger.getLogger(IngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
            } 
       } else
            JOptionPane.showMessageDialog(null, "El periodo de fecha ingresado no es v√°lido");
    }//GEN-LAST:event_jBGenReportIngresosActionPerformed

    private void jBDesde1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDesde1ActionPerformed
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFDesde1).setVisible(true);
    }//GEN-LAST:event_jBDesde1ActionPerformed

    private void jBHasta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHasta1ActionPerformed
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFHasta1).setVisible(true);
    }//GEN-LAST:event_jBHasta1ActionPerformed

    private void jBGenReportEgresosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGenReportEgresosActionPerformed
        SimpleDateFormat formatoDelTexto = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaD = null;
        Date fechaH=null;
        try {
            fechaD = formatoDelTexto.parse(jTFDesde1.getText());
            fechaH = formatoDelTexto.parse(jTFHasta1.getText());

        } catch (ParseException ex) {

             ex.printStackTrace();

        }     
        if(fechaD.before(fechaH)  || fechaD.equals(fechaH)){         
        String [] fd = jTFDesde1.getText().split("/");
        String [] fh = jTFHasta1.getText().split("/");
        String fechaDesde = fd[2]+"-"+fd[1]+"-"+fd[0];
        String fechaHasta = fh[2]+"-"+fh[1]+"-"+fh[0];
        String tipoGasto =  jComboBoxTipoGasto.getSelectedItem().toString().trim(); 
        Double tot =0.0;
        
        List listaE = new ArrayList();   
        ListaEgresos list;
        DecimalFormat df = new DecimalFormat("0.00##");        
        String sql = "SELECT tg.Elemento item, YEAR(g.fechaGasto) anio,MONTH(g.fechaGasto) mes,SUM(monto) monto FROM tipoGasto tg, gastos g WHERE g.fechaGasto BETWEEN '"+fd[2]+"-"+fd[1]+"-"+fd[0]+"' AND '"+
                fh[2]+"-"+fh[1]+"-"+fh[0]+"' AND tg.idtipo_gasto=g.tipo_gasto_idtipo_gasto AND tg.TipoGasto='"+jComboBoxTipoGasto.getSelectedItem().toString().trim() +"' GROUP BY  item, anio, mes ";
        try {
             cn = cc.conexion();
             Statement st = cn.createStatement();
             ResultSet rs = st.executeQuery(sql);             
             while(rs.next()){
                 tot=tot+rs.getDouble("monto");
                 ListaEgresos egresos= new ListaEgresos(rs.getString("mes").toString(),rs.getString("anio"),rs.getString("item").toString(),"$"+rs.getString("monto").toString());
                 listaE.add(egresos);                
             } 
             cn.close();
        } catch (SQLException ex) {
            Logger.getLogger(IngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Ordenamos la lista         
//        Collections.sort(listaE, new Comparator<ListaEgresos>() {
//            @Override
//            public int compare(ListaEgresos l1, ListaEgresos l2) {
//                    return new Integer(Integer.parseInt(l1.getMes())).compareTo(new Integer(Integer.parseInt(l2.getMes())));
//            }          
//         });
//        Collections.sort(listaE, new Comparator<ListaEgresos>() {
//            @Override
//            public int compare(ListaEgresos l1, ListaEgresos l2) {
//                    return new Integer(Integer.parseInt(l1.getAnio())).compareTo(new Integer(Integer.parseInt(l2.getAnio())));
//            }          
//         });
        
//         for(int i=0;i<listaE.size();i++){
//            list = (ListaEgresos)listaE.get(i);
//            list.setMes(retornaMes(Integer.parseInt(list.getMes())));
//                    
//         }
         
         //Creamos el informe
        try {            
            File fichero = new File("Egresos1.jasper");            
            JasperReport reporte= (JasperReport) JRLoader.loadObject(fichero);//(JasperReport) JRLoader.loadObject("Ingresos.jasper");
            String tipo=jComboBoxTipoGasto.getSelectedItem().toString().trim();
            if("Hogar".equals(tipo)){
                tipo= "del "+tipo;
            }else{
                tipo="de la "+tipo;
            }
            Map parametro = new HashMap();
            parametro.put("fechaDesde", jTFDesde1.getText());
            parametro.put("fechaHasta", jTFHasta1.getText());  
            parametro.put("leyenda", tipo);
            parametro.put("total", "$"+df.format(tot));
            parametro.put("fdSQL",fechaDesde);
            parametro.put("fhSQL",fechaHasta);
            parametro.put("tipoGasto",tipoGasto);
            //parametro.put("REPORT_CONNECTION",cc.conexion());
            //JasperPrint jprint= JasperFillManager.fillReport(reporte, parametro,cc.conexion());
            JasperPrint jprint= JasperFillManager.fillReport(reporte, parametro,new JRBeanCollectionDataSource(listaE));
            
            JasperViewer.viewReport(jprint,false);
        } catch (JRException ex) {
            Logger.getLogger(IngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
        }      
       } else
            JOptionPane.showMessageDialog(null, "El periodo de fecha ingresado no es v√°lido");
    }//GEN-LAST:event_jBGenReportEgresosActionPerformed

    private void jTFDesdeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFDesdeMouseClicked
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFDesde).setVisible(true);
    }//GEN-LAST:event_jTFDesdeMouseClicked

    private void jTFHastaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFHastaMouseClicked
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFHasta).setVisible(true);
    }//GEN-LAST:event_jTFHastaMouseClicked

    private void jTFDesde1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFDesde1MouseClicked
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFDesde1).setVisible(true);
    }//GEN-LAST:event_jTFDesde1MouseClicked

    private void jTFHasta1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFHasta1MouseClicked
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,jTFHasta1).setVisible(true);
    }//GEN-LAST:event_jTFHasta1MouseClicked
    
    private String retornaMes(int mes){
        String [] meses = {"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septimbre","Octubre","Noviembre","Diciembre"};
        String retorna = meses[mes-1];
        return retorna;
    }
    private Double getConsulta(String sql, String tipoList){
        ListaIngresos list;       
        Double tot=0.0;
       
        boolean band;
        try {  
             cn = cc.conexion();
             Statement st = cn.createStatement();
             ResultSet rs = st.executeQuery(sql);
             
             while(rs.next()){
                 tot=tot+rs.getDouble("monto");
                 band = false;
                 for(int i=0;i<lista.size();i++){
                     list = (ListaIngresos)lista.get(i); 
                     //ac√° ingresa cuando existe en la lista un mes y a√±o igual al registro actual
                      if(rs.getString("mes").equals(list.getMes())&& rs.getString("anio").equals(list.getAnio())){
                         band=true;  
                         switch(tipoList){
                            case "donac": list.setDonacion("$"+rs.getString("monto"));break;
                            case "flores": list.setFloresVida("$"+rs.getString("monto"));break;
                            case "public": list.setPublicidad("$"+rs.getString("monto"));break;
                            case "rifas": list.setRifas("$"+rs.getString("monto"));break;
                            case "tarj": list.setTarjetas("$"+rs.getString("monto"));                          
                        }
                        
                     }
                 }
                 //ac√° ingresa  cuando no existe en la lista
                 //ning√∫n valor con el mes y a√±o del registro actual
                 if(band==false){                      
                     ListaIngresos ingresos=null;
                      switch(tipoList){
                            case "donac": ingresos= new ListaIngresos(rs.getString("mes").toString(),rs.getString("anio").toString(),"---","$"+rs.getString("monto").toString(),"---","---","---","---");break;
                            case "flores": ingresos= new ListaIngresos(rs.getString("mes").toString(),rs.getString("anio").toString(),"---","---","$"+rs.getString("monto").toString(),"---","---","---");break;
                            case "public": ingresos= new ListaIngresos(rs.getString("mes").toString(),rs.getString("anio").toString(),"---","---","---","$"+rs.getString("monto").toString(),"---","---");break;    
                            case "rifas": ingresos= new ListaIngresos(rs.getString("mes").toString(),rs.getString("anio").toString(),"---","---","---","---","$"+rs.getString("monto").toString(),"---");break;        
                            case "tarj": ingresos= new ListaIngresos(rs.getString("mes").toString(),rs.getString("anio").toString(),"---","---","---","---","-","$"+rs.getString("monto").toString());            
                            
                      }
                     
                     lista.add(ingresos);                     
                 }                
             }     
             cn.close();
        } catch (SQLException ex) {
            Logger.getLogger(IngresosEgresos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return tot;
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Ingresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Ingresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Ingresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Ingresos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Ingresos().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jBDesde;
    private javax.swing.JButton jBDesde1;
    private javax.swing.JButton jBGenReportEgresos;
    private javax.swing.JButton jBGenReportIngresos;
    private javax.swing.JButton jBHasta;
    private javax.swing.JButton jBHasta1;
    private javax.swing.JComboBox jComboBoxTipoGasto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelEgresos;
    private javax.swing.JPanel jPanelIngresos;
    private javax.swing.JTextField jTFDesde;
    private javax.swing.JTextField jTFDesde1;
    private javax.swing.JTextField jTFHasta;
    private javax.swing.JTextField jTFHasta1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
