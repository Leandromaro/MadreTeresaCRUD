/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package madreteresacrud;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.EventQueue;
import java.awt.Frame;
import java.beans.Beans;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import org.jdesktop.beansbinding.Converter;
import utilidades.Calendario;

/**
 *
 * @author Francis
 */
public class SociosABM extends JPanel {
    
    public SociosABM() {        
        initComponents(); 
//        refreshButton.setVisible(false);
        //Ocultamos la columna correspondiente al idTipoSocio
        masterTable.getColumnModel().getColumn(11).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(11).setMinWidth(0);
        masterTable.getColumnModel().getColumn(11).setPreferredWidth(0);
        
        masterTable.getColumnModel().getColumn(12).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(12).setMinWidth(0);
        masterTable.getColumnModel().getColumn(12).setPreferredWidth(0);
        
        masterTable.getColumnModel().getColumn(13).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(13).setMinWidth(0);
        masterTable.getColumnModel().getColumn(13).setPreferredWidth(0);
        
        //Deshabilitamos el combo tipo socio
        jComboTipSoc.setEnabled(false);        
        //Agregamos los tipos de socios al combo
        java.util.Collection lista = new TipoSocioABM().getTipoSoc();
        String t ;
        for (Object entity : lista) {
            t = (String) entity;            
            jComboTipSoc.addItem(t);
        }
        setBusqueda();
        jLabelTipSoc.setVisible(false);
        jLEliminado.setVisible(false);
//        refreshButton.setVisible(false);
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }
    
    public SociosABM(String numDoc) { 
        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("madreTeresaCRUDPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT s FROM Socios s WHERE s.documento="+numDoc+" AND s.eliminado=false");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("madreTeresaCRUDPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT s FROM Socios s");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        madreTeresaCRUDPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("madreTeresaCRUDPU").createEntityManager();
        tipoSocioQuery = java.beans.Beans.isDesignTime() ? null : madreTeresaCRUDPUEntityManager.createQuery("SELECT t FROM TipoSocio t");
        tipoSocioList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tipoSocioQuery.getResultList();
        tipoSocioQuery1 = java.beans.Beans.isDesignTime() ? null : madreTeresaCRUDPUEntityManager.createQuery("SELECT t FROM TipoSocio t");
        tipoSocioList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tipoSocioQuery1.getResultList();
        tipoSocioQuery2 = java.beans.Beans.isDesignTime() ? null : madreTeresaCRUDPUEntityManager.createQuery("SELECT t FROM TipoSocio t");
        tipoSocioList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : tipoSocioQuery2.getResultList();
        jPanelForm = new javax.swing.JPanel();
        apellidoLabel = new javax.swing.JLabel();
        apellidoField = new javax.swing.JTextField();
        nombreLabel = new javax.swing.JLabel();
        nombreField = new javax.swing.JTextField();
        documentoLabel = new javax.swing.JLabel();
        tipoDocumentoLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        telefonoLabel = new javax.swing.JLabel();
        fechaNacimientoLabel = new javax.swing.JLabel();
        localidadLabel = new javax.swing.JLabel();
        direccionLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        telefonoField = new javax.swing.JTextField();
        fechaNacimientoField = new javax.swing.JTextField();
        localidadField = new javax.swing.JTextField();
        direccionField = new javax.swing.JTextField();
        jTextFieldCuil = new javax.swing.JTextField();
        jLabelCuil = new javax.swing.JLabel();
        jLabelNumSoc = new javax.swing.JLabel();
        jTextFieldNumSoc = new javax.swing.JTextField();
        jLabelTipoSocio = new javax.swing.JLabel();
        jComboTipSoc = new javax.swing.JComboBox();
        tipoDocumentoCB = new javax.swing.JComboBox();
        jButtonFecha = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLEliminado = new javax.swing.JLabel();
        jLabelTipSoc = new javax.swing.JLabel();
        documentoField = new javax.swing.JTextField();
        jPanelTabla = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jTFBusqueda = new javax.swing.JTextField();
        jLabelBuscar = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jBVerCuotas = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setBorder(null);

        jPanelForm.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        apellidoLabel.setText("Apellido:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.apellido}"), apellidoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), apellidoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        nombreLabel.setText("Nombre:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nombre}"), nombreField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), nombreField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        documentoLabel.setText("Documento:");

        tipoDocumentoLabel.setText("Tipo Documento:");

        emailLabel.setText("Email:");

        telefonoLabel.setText("Telefono:");

        fechaNacimientoLabel.setText("Fecha de Nacimiento:");

        localidadLabel.setText("Localidad:");

        direccionLabel.setText("Direccion:");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.email}"), emailField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), emailField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.telefono}"), telefonoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), telefonoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fechaNacimiento}"), fechaNacimientoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        binding.setConverter(dateConverter);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), fechaNacimientoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.localidad}"), localidadField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), localidadField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.direccion}"), direccionField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), direccionField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jTextFieldCuil.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.cuil}"), jTextFieldCuil, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabelCuil.setText("Cuil/Cuit:");

        jLabelNumSoc.setText("N° Socio:");

        jTextFieldNumSoc.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.numSoc}"), jTextFieldNumSoc, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabelTipoSocio.setText("Tipo de Socio:");

        jComboTipSoc.setSelectedItem("Activo");
        jComboTipSoc.addActionListener(formListener);

        tipoDocumentoCB.setEditable(true);
        tipoDocumentoCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DNI", "LE", "LC" }));
        tipoDocumentoCB.setAutoscrolls(true);
        tipoDocumentoCB.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.tipoDocumento}"), tipoDocumentoCB, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jButtonFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/calendario.GIF"))); // NOI18N
        jButtonFecha.setContentAreaFilled(false);
        jButtonFecha.addActionListener(formListener);

        refreshButton.setText("Cancelar");
        refreshButton.addActionListener(formListener);

        saveButton.setText("Guardar");
        saveButton.addActionListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.eliminado}"), jLEliminado, org.jdesktop.beansbinding.BeanProperty.create("text"), "");
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idTipoSocio}"), jLabelTipSoc, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.documento}"), documentoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), documentoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelFormLayout = new javax.swing.GroupLayout(jPanelForm);
        jPanelForm.setLayout(jPanelFormLayout);
        jPanelFormLayout.setHorizontalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(apellidoLabel)
                    .addComponent(jLabelTipoSocio)
                    .addComponent(nombreLabel)
                    .addComponent(tipoDocumentoLabel)
                    .addComponent(jLabelCuil, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefonoLabel)
                    .addComponent(direccionLabel)
                    .addComponent(localidadLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(apellidoField)
                        .addComponent(nombreField)
                        .addComponent(localidadField)
                        .addGroup(jPanelFormLayout.createSequentialGroup()
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboTipSoc, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipoDocumentoCB, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextFieldCuil, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(telefonoField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(84, 84, 84)
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(emailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(documentoLabel)
                                .addComponent(jLabelNumSoc)
                                .addComponent(fechaNacimientoLabel))
                            .addGap(18, 18, 18)
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelFormLayout.createSequentialGroup()
                                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextFieldNumSoc, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                        .addComponent(documentoField)
                                        .addComponent(fechaNacimientoField))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(direccionField)))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelFormLayout.createSequentialGroup()
                    .addGap(363, 363, 363)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelFormLayout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(jLabelTipSoc))
                        .addComponent(jLEliminado))
                    .addContainerGap(532, Short.MAX_VALUE)))
        );
        jPanelFormLayout.setVerticalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipoSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboTipSoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNumSoc)
                    .addComponent(jTextFieldNumSoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoDocumentoLabel)
                    .addComponent(tipoDocumentoCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(documentoLabel)
                    .addComponent(documentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelCuil)
                        .addComponent(jTextFieldCuil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fechaNacimientoLabel)
                        .addComponent(fechaNacimientoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(telefonoLabel)
                        .addComponent(emailLabel))
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefonoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(localidadLabel)
                    .addComponent(localidadField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(direccionLabel)
                    .addComponent(direccionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(saveButton))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelFormLayout.createSequentialGroup()
                    .addGap(75, 75, 75)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabelTipSoc)
                        .addGroup(jPanelFormLayout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(jLEliminado)))
                    .addContainerGap(227, Short.MAX_VALUE)))
        );

        jPanelTabla.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${apellido}"));
        columnBinding.setColumnName("Apellido");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoDocumento}"));
        columnBinding.setColumnName("Tipo Documento");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${documento}"));
        columnBinding.setColumnName("Documento");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numSoc}"));
        columnBinding.setColumnName("N° Socio");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cuil}"));
        columnBinding.setColumnName("Cuil");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefono}"));
        columnBinding.setColumnName("Telefono");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fechaNacimiento}"));
        columnBinding.setColumnName("Fecha Nacimiento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${localidad}"));
        columnBinding.setColumnName("Localidad");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${direccion}"));
        columnBinding.setColumnName("Direccion");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idTipoSocio}"));
        columnBinding.setColumnName("idTipoSoc");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${eliminado}"));
        columnBinding.setColumnName("eliminado");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idSocio}"));
        columnBinding.setColumnName("idSocio");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(formListener);
        masterScrollPane.setViewportView(masterTable);
        masterTable.getColumnModel().getColumn(11).setResizable(false);

        newButton.setText("Nuevo Socio");
        newButton.addActionListener(formListener);

        deleteButton.setText("Eliminar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        jTFBusqueda.setToolTipText("Ingrese el apellido y nombre.");
        jTFBusqueda.addKeyListener(formListener);

        jLabelBuscar.setText("Buscar Socio:");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(formListener);

        jBVerCuotas.setText("Cuotas del Socio");
        jBVerCuotas.setEnabled(false);
        jBVerCuotas.addActionListener(formListener);

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBuscar)
                        .addGap(18, 18, 18)
                        .addComponent(jBVerCuotas))
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar)
                    .addComponent(jBVerCuotas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newButton)
                    .addComponent(deleteButton))
                .addContainerGap())
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(42, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == jComboTipSoc) {
                SociosABM.this.jComboTipSocActionPerformed(evt);
            }
            else if (evt.getSource() == jButtonFecha) {
                SociosABM.this.jButtonFechaActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                SociosABM.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                SociosABM.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                SociosABM.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                SociosABM.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButtonBuscar) {
                SociosABM.this.jButtonBuscarActionPerformed(evt);
            }
            else if (evt.getSource() == jBVerCuotas) {
                SociosABM.this.jBVerCuotasActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == jTFBusqueda) {
                SociosABM.this.jTFBusquedaKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == masterTable) {
                SociosABM.this.masterTableMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    

   
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
//        int[] selected = masterTable.getSelectedRows();
//        List<madreteresacrud.Socios> toRemove = new ArrayList<madreteresacrud.Socios>(selected.length);
//        for (int idx = 0; idx < selected.length; idx++) {
//            madreteresacrud.Socios s = list.get(masterTable.convertRowIndexToModel(selected[idx]));
//            toRemove.add(s);
//            entityManager.remove(s);
//        }
//        list.removeAll(toRemove);
        //Buscamos las cuotas del socio seleccionado
        int selected = masterTable.getSelectedRow();
        int id=Integer.parseInt(masterTable.getValueAt(selected, 11).toString());
        CuotaSocialABM csabm = new CuotaSocialABM(id);
        java.util.Collection lc = csabm.getListaCuotas();
        CuotaSocial cs = new CuotaSocial();
        int idCuota = 0;
        for (Object cuota : lc) {            
            cs = (CuotaSocial) cuota;
            idCuota = cs.getIdCuotaSocial();
            
        }
        //Preguntamos si adeuda cuotas
        if( idCuota != 0 ){
            int ax = JOptionPane.showConfirmDialog(null, "El socio seleccionado adeuda cuotas, decea eliminarlo de todas formas?");
            if(ax == JOptionPane.YES_OPTION){                
                jLEliminado.setText("TRUE");
                try {
                    entityManager.getTransaction().commit();
                    entityManager.getTransaction().begin();
                } catch (RollbackException rex) {
                    rex.printStackTrace();
                    entityManager.getTransaction().begin();
                    List<madreteresacrud.Socios> merged = new ArrayList<madreteresacrud.Socios>(list.size());
                    for (madreteresacrud.Socios s : list) {
                        merged.add(entityManager.merge(s));
                    }
                    list.clear();
                    list.addAll(merged);             
                }
                 //Volvemos a cargar la tabla
                entityManager.getTransaction().rollback();
                entityManager.getTransaction().begin();
                java.util.Collection data = query.getResultList();
                for (Object entity : data) {
                    entityManager.refresh(entity);            
                }
                list.clear();
                list.addAll(data);
                jComboTipSoc.setEnabled(false);  
            }            
        }else {
            int ax = JOptionPane.showConfirmDialog(null, "Eliminar el socio seleccionado?");
            if(ax == JOptionPane.YES_OPTION){
                jLEliminado.setText("TRUE");
                try {
                    entityManager.getTransaction().commit();
                    entityManager.getTransaction().begin();
                } catch (RollbackException rex) {
                    rex.printStackTrace();
                    entityManager.getTransaction().begin();
                    List<madreteresacrud.Socios> merged = new ArrayList<madreteresacrud.Socios>(list.size());
                    for (madreteresacrud.Socios s : list) {
                        merged.add(entityManager.merge(s));
                    }
                    list.clear();
                    list.addAll(merged);             
                }
                
                 //Volvemos a cargar la tabla
                entityManager.getTransaction().rollback();
                entityManager.getTransaction().begin();
                java.util.Collection data = query.getResultList();
                for (Object entity : data) {
                    entityManager.refresh(entity);            
                }
                list.clear();
                list.addAll(data);
                jComboTipSoc.setEnabled(false); 
                tipoDocumentoCB.setEnabled(false);
                jTextFieldCuil.setEnabled(false);
                jTextFieldNumSoc.setEnabled(false);
            }      
        }
       
    }//GEN-LAST:event_deleteButtonActionPerformed
    
    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
         jComboTipSoc.setEnabled(true);  
         tipoDocumentoCB.setEnabled(true);
         jTextFieldCuil.setEnabled(true);
         jTextFieldNumSoc.setEnabled(true);
        TipoSocioABM tipoG = new TipoSocioABM();
        if (tipoG.getId(jComboTipSoc.getSelectedItem().toString())!=null){
            Integer var = tipoG.getId(jComboTipSoc.getSelectedItem().toString());
            jLabelTipSoc.setText(Integer.toString(var));            
        }
        
        madreteresacrud.Socios s = new madreteresacrud.Socios();
        entityManager.persist(s);
        list.add(s);       
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        jBVerCuotas.setEnabled(false);
    }//GEN-LAST:event_newButtonActionPerformed
        TipoSocioABM tipoS = new TipoSocioABM();
    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        jComboTipSoc.setEnabled(true);  
        tipoDocumentoCB.setEnabled(true);
        jTextFieldCuil.setEnabled(true);
        jTextFieldNumSoc.setEnabled(true);
        String var = tipoS.getTipoSoc(Integer.parseInt(jLabelTipSoc.getText()));
        if (var !=null){  
             
           jComboTipSoc.setSelectedItem(var);     
        } 
        jBVerCuotas.setEnabled(true);
    }//GEN-LAST:event_masterTableMouseClicked
    //Busca y selecciona una fila en la tabla
    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        buscarSocio();
       
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jBVerCuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerCuotasActionPerformed
         int selected = masterTable.getSelectedRow();
         int id=Integer.parseInt(masterTable.getValueAt(selected, 13).toString());         
         CuotaSocialABM csabm = new CuotaSocialABM(id);
         csabm.s = new Socios();
         csabm.s.setIdTipoSocio(Integer.parseInt(masterTable.getValueAt(selected, 11).toString()));
         if(csabm.getListaCuotasDeudas().isEmpty())
            JOptionPane.showMessageDialog(null, masterTable.getValueAt(selected, 0).toString()+" "+masterTable.getValueAt(selected, 1).toString()+" no adeuda cuotas.");
         JDialog c = new JDialog((Frame) SwingUtilities.getWindowAncestor(this),true);
        c.setTitle("Cuotas de "+masterTable.getValueAt(selected, 0).toString()+" "+masterTable.getValueAt(selected, 1).toString());
        c.setContentPane(csabm);
        c.pack();
        c.setLocationRelativeTo(null);
        c.setVisible(true);
//         JFrame frame = new JFrame("Cuotas de "+masterTable.getValueAt(selected, 0).toString()+" "+masterTable.getValueAt(selected, 1).toString());
//
//        frame.setContentPane(csabm);
//        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
//        frame.pack();
//        frame.setVisible(true);
//        frame.setLocationRelativeTo(null);        
            
    }//GEN-LAST:event_jBVerCuotasActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<madreteresacrud.Socios> merged = new ArrayList<madreteresacrud.Socios>(list.size());
            for (madreteresacrud.Socios s : list) {
                merged.add(entityManager.merge(s));
            }
            list.clear();
            list.addAll(merged);
        }
        
        tipoDocumentoCB.setEnabled(false);
        jTextFieldCuil.setEnabled(false);
        jTextFieldNumSoc.setEnabled(false);
        jComboTipSoc.setEnabled(false);
        //Vuelve a cargar los socios en la tabla
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        jBVerCuotas.setEnabled(false);
        setBusqueda();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void jButtonFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFechaActionPerformed
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this),true,fechaNacimientoField).setVisible(true);
    }//GEN-LAST:event_jButtonFechaActionPerformed

    private void jComboTipSocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboTipSocActionPerformed

        if (tipoS.getId(jComboTipSoc.getSelectedItem().toString())!=null){
            Integer var = tipoS.getId(jComboTipSoc.getSelectedItem().toString());
            jLabelTipSoc.setText(Integer.toString(var));
        }
    }//GEN-LAST:event_jComboTipSocActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        jBVerCuotas.setEnabled(false);
        tipoDocumentoCB.setEnabled(false);
        jTextFieldCuil.setEnabled(false);
        jTextFieldNumSoc.setEnabled(false);
        jComboTipSoc.setEnabled(false);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void jTFBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFBusquedaKeyPressed
        if(evt.getKeyCode()==java.awt.Event.ENTER){
             buscarSocio();             
        }
    }//GEN-LAST:event_jTFBusquedaKeyPressed
      
    //OBJETO PARA PODER ENLAZAR LA FECHA DESDE LA BD EN EL TEXTFIELD fechaNacimiento
     Converter dateConverter = new Converter<java.util.Date, String>() {
    @Override
    public String convertForward(java.util.Date value) {
     DateFormat df = DateFormat.getDateInstance();
        return df.format(value);
    }
    @Override
    public java.util.Date convertReverse(String value) {
        try {
            DateFormat df = DateFormat.getDateInstance();
            return df.parse(value);
        } catch (ParseException e) {
            return Calendar.getInstance().getTime();
        }
    }
    };
     
     public java.util.Collection getListaSocios(){
         
         return query.getResultList();
     
     }
    private void buscarSocio(){
        String ele = jTFBusqueda.getText();
        String [] apeYnom = ele.split(" ");
        String ele1;
        for (int i = 0; i < masterTable.getRowCount(); i++) {
                ele = masterTable.getValueAt(i, 0).toString().trim();
                ele1 = masterTable.getValueAt(i, 1).toString().trim();
                if (ele.equals(apeYnom[0].trim()) && ele1.equals(apeYnom[1].trim())) {

                        masterTable.changeSelection(i, 0, false, false);   
                        jBVerCuotas.setEnabled(true);  
                        jComboTipSoc.setEnabled(true);
                        jComboTipSoc.setEnabled(true);  
                        tipoDocumentoCB.setEnabled(true);
                        jTextFieldCuil.setEnabled(true);
                        jTextFieldNumSoc.setEnabled(true);
                        break;

                }
         }
    }
    private void setBusqueda(){
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(jTFBusqueda);
        textAutoCompleter.setMode(0);
        //SociosABM socios = new SociosABM();
        java.util.Collection listaSocios = this.getListaSocios();        
        for (Object socio : listaSocios) {
            Socios soc = new Socios();
            soc = (Socios) socio;                         
            textAutoCompleter.addItem(soc.getApellido().trim()+" "+soc.getNombre().trim());
            
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidoField;
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField direccionField;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JTextField documentoField;
    private javax.swing.JLabel documentoLabel;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField fechaNacimientoField;
    private javax.swing.JLabel fechaNacimientoLabel;
    private javax.swing.JButton jBVerCuotas;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonFecha;
    private javax.swing.JComboBox jComboTipSoc;
    private javax.swing.JLabel jLEliminado;
    private javax.swing.JLabel jLabelBuscar;
    private javax.swing.JLabel jLabelCuil;
    private javax.swing.JLabel jLabelNumSoc;
    private javax.swing.JLabel jLabelTipSoc;
    private javax.swing.JLabel jLabelTipoSocio;
    private javax.swing.JPanel jPanelForm;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JTextField jTFBusqueda;
    private javax.swing.JTextField jTextFieldCuil;
    private javax.swing.JTextField jTextFieldNumSoc;
    private java.util.List<madreteresacrud.Socios> list;
    private javax.swing.JTextField localidadField;
    private javax.swing.JLabel localidadLabel;
    private javax.persistence.EntityManager madreTeresaCRUDPUEntityManager;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField nombreField;
    private javax.swing.JLabel nombreLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField telefonoField;
    private javax.swing.JLabel telefonoLabel;
    private javax.swing.JComboBox tipoDocumentoCB;
    private javax.swing.JLabel tipoDocumentoLabel;
    private java.util.List<madreteresacrud.TipoSocio> tipoSocioList;
    private java.util.List<madreteresacrud.TipoSocio> tipoSocioList1;
    private java.util.List<madreteresacrud.TipoSocio> tipoSocioList2;
    private javax.persistence.Query tipoSocioQuery;
    private javax.persistence.Query tipoSocioQuery1;
    private javax.persistence.Query tipoSocioQuery2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
//    public static void main(String[] args) {
//        /*
//         * Set the Nimbus look and feel
//         */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /*
//         * If Nimbus (introduced in Java SE 6) is not available, stay with the
//         * default look and feel. For details see
//         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SociosABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SociosABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SociosABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SociosABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /*
//         * Create and display the form
//         */
//        EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                JFrame frame = new JFrame();
//                frame.setContentPane(new SociosABM());
//                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//                frame.pack();
//                frame.setVisible(true);
//            }
//        });
//    }
}
