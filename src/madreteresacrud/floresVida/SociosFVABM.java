/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package madreteresacrud.floresVida;

import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Toolkit;
import org.jdesktop.swingx.autocomplete.*;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.persistence.RollbackException;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import org.jdesktop.beansbinding.Converter;
import utilidades.BuscarSocio;
import utilidades.UtilsStatics;
import utilidades.Localidades;

/**
 *
 * @author francis
 */
public class SociosFVABM extends JPanel {

    public SociosFVABM() {
        initComponents();
        //Ocultamos el id de socio
        masterTable.getColumnModel().getColumn(6).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(6).setMinWidth(0);
        masterTable.getColumnModel().getColumn(6).setPreferredWidth(0);
        //ocultamos la localidad
        masterTable.getColumnModel().getColumn(8).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(8).setMinWidth(0);
        masterTable.getColumnModel().getColumn(8).setPreferredWidth(0);
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }

        setBusqueda();
        setComboSexo();
        setComboLocalidades();
//        dniField.setEnabled(false);
//        jCBSexo.setEnabled(false);
//        celularField.setEnabled(false);
//        emailField.setEnabled(false);
//        jCBLocalididad.setEnabled(false);

//        refreshButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor. ORDER BY s.apellido
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("madreTeresaCRUDPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT s FROM SociosFlorVida s");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jPanelForm = new javax.swing.JPanel();
        apellidoLabel = new javax.swing.JLabel();
        nombreLabel = new javax.swing.JLabel();
        localidadLabel = new javax.swing.JLabel();
        direccionLabel = new javax.swing.JLabel();
        telefonoLabel = new javax.swing.JLabel();
        cuilLabel = new javax.swing.JLabel();
        apellidoField = new javax.swing.JTextField();
        nombreField = new javax.swing.JTextField();
        direccionField = new javax.swing.JTextField();
        telefonoField = new javax.swing.JTextField();
        cuilField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        dniLabel = new javax.swing.JLabel();
        celularLabel = new javax.swing.JLabel();
        celularField = new javax.swing.JTextField();
        dniField = new javax.swing.JTextField();
        sexoLabel = new javax.swing.JLabel();
        jCBSexo = new javax.swing.JComboBox();
        emailLabel = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jCBLocalididad = new javax.swing.JComboBox();
        jPanelTabla = new javax.swing.JPanel();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jBFV = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTFBusqueda = new javax.swing.JTextField();
        jBbuscar = new javax.swing.JButton();
        jBVerCuotas = new javax.swing.JButton();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();

        FormListener formListener = new FormListener();

        jPanelForm.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        apellidoLabel.setText("Apellido:");

        nombreLabel.setText("Nombre:");

        localidadLabel.setText("Localidad:");

        direccionLabel.setText("Direccion:");

        telefonoLabel.setText("Telefono:");

        cuilLabel.setText("Cuil/Cuit:");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.apellido}"), apellidoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        binding.setConverter(UtilsStatics.converterMayuscula());
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), apellidoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nombre}"), nombreField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        binding.setConverter(UtilsStatics.converterMayuscula());
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), nombreField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.direccion}"), direccionField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        binding.setConverter(UtilsStatics.converterMayuscula());
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), direccionField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.telefono}"), telefonoField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), telefonoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        telefonoField.addFocusListener(formListener);
        telefonoField.addKeyListener(formListener);

        cuilField.setToolTipText("Solo números y \"-\".");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.cuil}"), cuilField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), cuilField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        cuilField.addFocusListener(formListener);
        cuilField.addKeyListener(formListener);

        saveButton.setText("Guardar");
        saveButton.setEnabled(false);
        saveButton.addActionListener(formListener);

        refreshButton.setText("Cancelar");
        refreshButton.setEnabled(false);
        refreshButton.addActionListener(formListener);

        dniLabel.setText("DNI:");

        celularLabel.setText("Celular:");

        celularField.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.celular}"), celularField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        celularField.addFocusListener(formListener);
        celularField.addKeyListener(formListener);

        dniField.setToolTipText("Solo números con longitud máxima de 8 dígitos. ");
        dniField.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.dni}"), dniField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        dniField.addKeyListener(formListener);

        sexoLabel.setText("Sexo:");

        jCBSexo.setAutoscrolls(true);
        jCBSexo.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.sexo}"), jCBSexo, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        emailLabel.setText("Email:");

        emailField.setToolTipText("Debería ser de la forma \"nombre@dominio.com\"");
        emailField.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.email}"), emailField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(UtilsStatics.converterMayuscula());
        bindingGroup.addBinding(binding);

        emailField.addFocusListener(formListener);

        jCBLocalididad.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.localidad}"), jCBLocalididad, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        binding.setSourceUnreadableValue(null);
        binding.setConverter(localidadConverter);
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelFormLayout = new javax.swing.GroupLayout(jPanelForm);
        jPanelForm.setLayout(jPanelFormLayout);
        jPanelFormLayout.setHorizontalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(apellidoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cuilLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dniLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(localidadLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apellidoField, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dniField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cuilField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telefonoField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBLocalididad, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFormLayout.createSequentialGroup()
                                .addComponent(refreshButton)
                                .addGap(33, 33, 33)
                                .addComponent(saveButton))))
                    .addComponent(telefonoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(direccionLabel)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(celularLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nombreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sexoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCBSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(celularField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailField)
                    .addComponent(direccionField, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelFormLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {refreshButton, saveButton});

        jPanelFormLayout.setVerticalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellidoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidoField)
                    .addComponent(nombreLabel)
                    .addComponent(nombreField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addComponent(dniLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFormLayout.createSequentialGroup()
                                .addComponent(cuilLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(telefonoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(telefonoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelFormLayout.createSequentialGroup()
                                .addComponent(cuilField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sexoLabel)
                                .addComponent(dniField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCBSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(celularField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(celularLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel))))
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(localidadLabel)
                            .addComponent(jCBLocalididad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(direccionLabel)
                            .addComponent(direccionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton)
                    .addComponent(saveButton))
                .addGap(8, 8, 8))
        );

        jPanelTabla.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        newButton.setText("Nuevo Adherente");
        newButton.addActionListener(formListener);

        deleteButton.setText("Eliminar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        jBFV.setText(" Ver Flores de Vida");
        jBFV.setEnabled(false);
        jBFV.addActionListener(formListener);

        jLabel2.setText("Buscar Adherente:");

        jTFBusqueda.setToolTipText("Ingrese el N° de documento o apellido y nombre.");
        jTFBusqueda.addKeyListener(formListener);

        jBbuscar.setText("Buscar");
        jBbuscar.addActionListener(formListener);

        jBVerCuotas.setText("Cuotas del Adherente");
        jBVerCuotas.setEnabled(false);
        jBVerCuotas.addActionListener(formListener);

        masterTable.setAutoCreateRowSorter(true);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${apellido}"));
        columnBinding.setColumnName("Apellido");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nombre}"));
        columnBinding.setColumnName("Nombre");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dni}"));
        columnBinding.setColumnName("DNI");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sexo}"));
        columnBinding.setColumnName("Sexo");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${cuil}"));
        columnBinding.setColumnName("Cuil");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${telefono}"));
        columnBinding.setColumnName("Telefono");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idSocio}"));
        columnBinding.setColumnName("Id Socio");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${celular}"));
        columnBinding.setColumnName("Celular");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${localidad}"));
        columnBinding.setColumnName("Localidad");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${direccion}"));
        columnBinding.setColumnName("Direccion");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${email}"));
        columnBinding.setColumnName("Email");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterTable.addMouseListener(formListener);
        masterScrollPane.setViewportView(masterTable);

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jBFV)
                        .addGap(18, 18, 18)
                        .addComponent(newButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton))
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBbuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBVerCuotas)))
                .addContainerGap(164, Short.MAX_VALUE))
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 824, Short.MAX_VALUE)
                    .addGap(14, 14, 14)))
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTFBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBbuscar)
                        .addComponent(jBVerCuotas)))
                .addGap(211, 211, 211)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBFV)
                    .addComponent(newButton)
                    .addComponent(deleteButton)))
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(39, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.FocusListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                SociosFVABM.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                SociosFVABM.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                SociosFVABM.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                SociosFVABM.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jBFV) {
                SociosFVABM.this.jBFVActionPerformed(evt);
            }
            else if (evt.getSource() == jBbuscar) {
                SociosFVABM.this.jBbuscarActionPerformed(evt);
            }
            else if (evt.getSource() == jBVerCuotas) {
                SociosFVABM.this.jBVerCuotasActionPerformed(evt);
            }
        }

        public void focusGained(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == telefonoField) {
                SociosFVABM.this.telefonoFieldFocusGained(evt);
            }
            else if (evt.getSource() == cuilField) {
                SociosFVABM.this.cuilFieldFocusGained(evt);
            }
            else if (evt.getSource() == celularField) {
                SociosFVABM.this.celularFieldFocusGained(evt);
            }
        }

        public void focusLost(java.awt.event.FocusEvent evt) {
            if (evt.getSource() == telefonoField) {
                SociosFVABM.this.telefonoFieldFocusLost(evt);
            }
            else if (evt.getSource() == celularField) {
                SociosFVABM.this.celularFieldFocusLost(evt);
            }
            else if (evt.getSource() == emailField) {
                SociosFVABM.this.emailFieldFocusLost(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == jTFBusqueda) {
                SociosFVABM.this.jTFBusquedaKeyPressed(evt);
            }
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == telefonoField) {
                SociosFVABM.this.telefonoFieldKeyTyped(evt);
            }
            else if (evt.getSource() == cuilField) {
                SociosFVABM.this.cuilFieldKeyTyped(evt);
            }
            else if (evt.getSource() == celularField) {
                SociosFVABM.this.celularFieldKeyTyped(evt);
            }
            else if (evt.getSource() == dniField) {
                SociosFVABM.this.dniFieldKeyTyped(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == masterTable) {
                SociosFVABM.this.masterTableMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents


    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        List<FlorVida> floresVida = getFloresVidaByAdherente(Integer.valueOf(masterTable.getValueAt(masterTable.getSelectedRow(), 6).toString()));
        String fv="";
        if(floresVida.size()>0){
            fv="\nTiene asignado las siguientes flores de vida:\n";
            for (FlorVida florVida : floresVida) {
                fv+="*"+florVida.getApellido()+", "+florVida.getNombre()+"\n";
            }            
        }
        
        int reply = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el Adherente?"+fv, "Eliminación de Registro.", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {

            int[] selected = masterTable.getSelectedRows();
            List<madreteresacrud.floresVida.SociosFlorVida> toRemove = new ArrayList<madreteresacrud.floresVida.SociosFlorVida>(selected.length);
            for (int idx = 0; idx < selected.length; idx++) {
                madreteresacrud.floresVida.SociosFlorVida s = list.get(masterTable.convertRowIndexToModel(selected[idx]));
                toRemove.add(s);
                entityManager.remove(s);
            }
            try {
                entityManager.getTransaction().commit();
                entityManager.getTransaction().begin();
            } catch (Exception e) {
            }
            list.removeAll(toRemove);
            refrescarForm();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        madreteresacrud.floresVida.SociosFlorVida s = new madreteresacrud.floresVida.SociosFlorVida();
        entityManager.persist(s);
        list.add(s);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
        setEnabledBotones(true);
        masterTable.setEnabled(false);
        jCBLocalididad.setSelectedItem("RESISTENCIA - Chaco");
        jCBSexo.setSelectedIndex(0);
        int ax = JOptionPane.showConfirmDialog(this, "¿El adherente a ingresar es socio?", null, JOptionPane.YES_NO_OPTION);
        if (ax == JOptionPane.YES_OPTION) {
            new BuscarSocio((JFrame) SwingUtilities.getWindowAncestor(this), true, this).setVisible(true);
        }


    }//GEN-LAST:event_newButtonActionPerformed

    private void setEnabledBotones(boolean estado) {
        refreshButton.setEnabled(estado);
        saveButton.setEnabled(estado);
        deleteButton.setEnabled(estado);
        newButton.setEnabled(!estado);
        deleteButton.setEnabled(estado);
        jBFV.setEnabled(estado);
        jBbuscar.setEnabled(!estado);
        jBVerCuotas.setEnabled(estado);
        dniField.setEnabled(estado);
        jCBSexo.setEnabled(estado);
        celularField.setEnabled(estado);
        emailField.setEnabled(estado);
        jCBLocalididad.setEnabled(estado);
        jTFBusqueda.setEnabled(!estado);
    }

    private void jBbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBbuscarActionPerformed
        buscarSocio();
    }//GEN-LAST:event_jBbuscarActionPerformed

    private void jBFVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFVActionPerformed
        int selected = masterTable.getSelectedRow();
        int id = Integer.parseInt(masterTable.getValueAt(selected, 6).toString());
        FlorVidaSocio fv = new FlorVidaSocio(id);
        JDialog florv = new JDialog((JFrame) SwingUtilities.getWindowAncestor(this), true);
        florv.setTitle("Flores de vida del adherente " + masterTable.getValueAt(selected, 0).toString() + " " + masterTable.getValueAt(selected, 1).toString());
        florv.setContentPane(fv);
        florv.pack();
        florv.setLocationRelativeTo(null);
        florv.setVisible(true);
//        JFrame frame = new JFrame("Flores de vida del socio "+masterTable.getValueAt(selected, 0).toString()+" "+masterTable.getValueAt(selected, 1).toString());
//        frame.setContentPane(fv);
//        frame.pack();
//        frame.setVisible(true);
//        frame.setLocationRelativeTo(null);

    }//GEN-LAST:event_jBFVActionPerformed

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        setEnabledBotones(true);
    }//GEN-LAST:event_masterTableMouseClicked

    private void jBVerCuotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerCuotasActionPerformed
        int selected = masterTable.getSelectedRow();
        int id = Integer.parseInt(masterTable.getValueAt(selected, 6).toString());
        CuotasFVABM csabm = new CuotasFVABM(id);
//        JFrame frame = new JFrame("Cuotas de "+masterTable.getValueAt(selected, 0).toString()+" "+masterTable.getValueAt(selected, 1).toString());
        JDialog cuotas = new JDialog((JFrame) SwingUtilities.getWindowAncestor(this), true);
        cuotas.setTitle("Cuotas de " + masterTable.getValueAt(selected, 0).toString() + " " + masterTable.getValueAt(selected, 1).toString());
        cuotas.setContentPane(csabm);
        cuotas.pack();
        cuotas.setLocationRelativeTo(null);
        cuotas.setVisible(true);

//        frame.setContentPane(csabm);
//        frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
//        frame.pack();
//        frame.setVisible(true);
//        frame.setLocationRelativeTo(null);

    }//GEN-LAST:event_jBVerCuotasActionPerformed

    private void jTFBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFBusquedaKeyPressed
        if (evt.getKeyCode() == java.awt.Event.ENTER) {
            buscarSocio();
        }
    }//GEN-LAST:event_jTFBusquedaKeyPressed

    private void emailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFieldFocusLost
        if (!emailField.getText().trim().isEmpty()) {
            Matcher mt;
            Pattern pt_email = Pattern.compile("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");
            mt = pt_email.matcher(emailField.getText().trim());
            if (!mt.matches()) {
                JOptionPane.showMessageDialog(null, "El email ingresado no es válido! Debería ser de la forma (nombre@dominio.com).");
                emailField.requestFocus();

            }
        }
    }//GEN-LAST:event_emailFieldFocusLost

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (!blancos()) {
            try {
                entityManager.getTransaction().commit();
                entityManager.getTransaction().begin();
            } catch (RollbackException rex) {
                rex.printStackTrace();
                entityManager.getTransaction().begin();
                List<madreteresacrud.floresVida.SociosFlorVida> merged = new ArrayList<madreteresacrud.floresVida.SociosFlorVida>(list.size());
                for (madreteresacrud.floresVida.SociosFlorVida s : list) {
                    merged.add(entityManager.merge(s));
                }
                list.clear();
                list.addAll(merged);

            }
            refrescarForm();
            setBusqueda();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void refrescarForm() {
        masterTable.setEnabled(true);
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.List<SociosFlorVida> data = query.getResultList();
        for (SociosFlorVida entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        setEnabledBotones(false);
        activarTextos(false);
    }

    private void activarTextos(boolean estado) {
        jBVerCuotas.setEnabled(estado);
        jBFV.setEnabled(estado);
        dniField.setEnabled(estado);
        jCBSexo.setEnabled(estado);
        celularField.setEnabled(estado);
        emailField.setEnabled(estado);
        jCBLocalididad.setEnabled(estado);
    }

    private Boolean blancos() {
        if ((nombreField.getText().trim().isEmpty())
                || (apellidoField.getText().trim().isEmpty())
                || (direccionField.getText().trim().isEmpty())) {
            mensaje();
            return true;
        } else {
            return false;
        }
    }

    private void mensaje() {
        String respuesta = "";
        if (apellidoField.getText().trim().isEmpty()) {
            respuesta = respuesta + " " + "Apellido," + " ";
        }
        if (nombreField.getText().trim().isEmpty()) {
            respuesta = respuesta + " " + "Nombre," + " ";
        }
        if (direccionField.getText().trim().isEmpty()) {
            respuesta = respuesta + " " + "Direccion," + " ";
        }
        JOptionPane.showMessageDialog(null, "Los campos" + respuesta + "no deberian estar vacios!");
    }

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refrescarForm();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void celularFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_celularFieldFocusGained
        if (celularField.getText().trim().isEmpty()) {
            celularField.setText("0362154");
        }
    }//GEN-LAST:event_celularFieldFocusGained

    private void celularFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_celularFieldFocusLost
        if (celularField.getText().trim().length() < 9) {
            celularField.setText("");
        }
    }//GEN-LAST:event_celularFieldFocusLost

    private void telefonoFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_telefonoFieldFocusGained
        if (telefonoField.getText().trim().isEmpty()) {
            telefonoField.setText("03624");
        }
    }//GEN-LAST:event_telefonoFieldFocusGained

    private void telefonoFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_telefonoFieldFocusLost
        if (telefonoField.getText().trim().length() < 7) {
            telefonoField.setText("");
        }
    }//GEN-LAST:event_telefonoFieldFocusLost

    private void telefonoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telefonoFieldKeyTyped
        if ((!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())) || (telefonoField.getText().trim().length() >= 11)) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_telefonoFieldKeyTyped

    private void celularFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_celularFieldKeyTyped
        if ((!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())) || (celularField.getText().trim().length() >= 13)) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_celularFieldKeyTyped

    private void dniFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dniFieldKeyTyped
        if ((!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())) || (dniField.getText().trim().length() >= 8))//para permitir el punto && evt.getKeyChar()!='.')
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_dniFieldKeyTyped

    private void cuilFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cuilFieldKeyTyped
        if ((!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() != '-') || (cuilField.getText().trim().length() >= 13)) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_cuilFieldKeyTyped

    private void cuilFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cuilFieldFocusGained
        if (!dniField.getText().isEmpty() && !jCBSexo.getSelectedItem().toString().isEmpty()) {
            String cuil = "";
            String dni = dniField.getText().trim();
            if (dni.length() == 7) {
                dni = "0" + dni;
            }

            if ("M".equals(jCBSexo.getSelectedItem().toString())) {
                cuil = "20" + dni;
            } else {
                cuil = "27" + dni;
            }
            cuilField.setText(calculaCuil(cuil));
        }
    }//GEN-LAST:event_cuilFieldFocusGained

    public java.util.Collection getListaSocios() {
        return query.getResultList();
    }

    public SociosFlorVida getSocio(int id) {
        String sql = "SELECT s FROM SociosFlorVida s WHERE s.idSocio=" + id;
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery(sql);
        java.util.Collection lista = query.getResultList();

        SociosFlorVida s = new SociosFlorVida();

        for (Object entity : lista) {
            s = (SociosFlorVida) entity;
        }

        return s;
    }

    private List<Localidades> getLocalidades() {
        javax.persistence.Query query1;
        String sql = "SELECT l FROM Localidades l";

        query1 = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery(sql);
        List<Localidades> lista = query1.getResultList();
        return lista;

    }

    private void setComboLocalidades() {
        //seteamos el combo de localidades con la lista de todas ellas
        List<Localidades> localidades = getLocalidades();
        for (Localidades objects : localidades) {
            jCBLocalididad.addItem(objects);
        }

        AutoCompleteDecorator.decorate(this.jCBLocalididad);

    }

    private void buscarSocio() {
        String ele = jTFBusqueda.getText();
        String[] apeYnom = ele.split(", ");
        String ele1;
        boolean flag = false;
        for (int i = 0; i < masterTable.getRowCount(); i++) {
            ele = masterTable.getValueAt(i, 0).toString().trim();
            ele1 = masterTable.getValueAt(i, 1).toString().trim();
            if (ele.equals(apeYnom[0].trim()) && ele1.equals(apeYnom[1].trim())) {
                masterTable.changeSelection(i, 3, false, false);
                jBFV.setEnabled(true);
                jBVerCuotas.setEnabled(true);
                dniField.setEnabled(true);
                jCBSexo.setEnabled(true);
                celularField.setEnabled(true);
                emailField.setEnabled(true);
                jCBLocalididad.setEnabled(true);
                flag = true;
                break;
            }
        }
        if (!flag) {
            JOptionPane.showMessageDialog(null, "El socio ingresado no es válido!");
            jTFBusqueda.setText("");
        }
    }

    private List<FlorVida> getFloresVidaByAdherente(int idAdherente) {
        query = entityManager.createQuery("SELECT fv FROM FlorVida fv, RelacSocDifuntos rsd WHERE fv.idFV=rsd.idFV AND rsd.idSocioFV= :idSocio");
        query.setParameter("idSocio", idAdherente);
        return query.getResultList();
    }

    private void setComboSexo() {
        jCBSexo.addItem("M");
        jCBSexo.addItem("F");
    }

    private void setBusqueda() {
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(jTFBusqueda);
        textAutoCompleter.setMode(0);
        SociosFlorVida soc = new SociosFlorVida();
        java.util.Collection listaSocios = this.getListaSocios();
        for (Object socio : listaSocios) {

            soc = (SociosFlorVida) socio;
            textAutoCompleter.addItem(soc.getApellido() + ", " + soc.getNombre());

        }
    }

    private String calculaCuil(String c) {
        String cuil = null;
        if (!c.isEmpty()) {
            String serie = "5432765432";
            int acum = 0;
            String cuilConcat = "";
            int mod;
            String s;
            String c1;
            for (int i = 0; i < serie.length(); i++) {
                s = "" + serie.charAt(i);
                c1 = "" + c.charAt(i);
                acum = acum + (Integer.valueOf(s) * Integer.valueOf(c1));
            }
            mod = acum % 11;
            if (mod == 0) {
                cuil = c + "0";
            } else if (mod == 1) {
                cuil = c + "9";
            } else {
                int r = 11 - mod;
                cuil = c + r;
            }
            for (int i = 0; i < cuil.length(); i++) {

                if (i == 2 || i == 10) {
                    cuilConcat += "-" + cuil.charAt(i);
                } else {
                    cuilConcat += cuil.charAt(i);
                }

            }
            cuil = cuilConcat;
        }
        return cuil;
    }

    public void setApellidoField(String apellidoField) {
        this.apellidoField.setText(apellidoField);
    }

    public void setCuilField(String cuilField) {
        this.cuilField.setText(cuilField);
    }

    public void setDireccionField(String direccionField) {
        this.direccionField.setText(direccionField);
    }

    public void setEmailField(String emailField) {
        this.emailField.setText(emailField);
    }

    public void setjCBLocalididad(Localidades jCBLocalididad) {
        this.jCBLocalididad.setSelectedItem(jCBLocalididad);
    }

    public void setjCBSexo(String jCBSexo) {
        this.jCBSexo.setSelectedItem(jCBSexo);
    }

    public void setNombreField(String nombreField) {
        this.nombreField.setText(nombreField);
    }

    public void setTelefonoField(String telefonoField) {
        this.telefonoField.setText(telefonoField);
    }

    public void setCelularField(String celularField) {
        this.celularField.setText(celularField);
    }

    public void setDniField(String dniField) {
        this.dniField.setText(dniField);
    }
    Converter localidadConverter = new Converter<Integer, Localidades>() {

        @Override
        public Integer convertReverse(Localidades value) {
            return value.getIdLocalidad();
        }

        @Override
        public Localidades convertForward(Integer value) {
            try {
                return UtilsStatics.findLocalidad(value);
            } catch (Exception e) {
                System.err.println(e);
                return null;
            }

        }
    };

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidoField;
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JTextField celularField;
    private javax.swing.JLabel celularLabel;
    private javax.swing.JTextField cuilField;
    private javax.swing.JLabel cuilLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField direccionField;
    private javax.swing.JLabel direccionLabel;
    private javax.swing.JTextField dniField;
    private javax.swing.JLabel dniLabel;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jBFV;
    private javax.swing.JButton jBVerCuotas;
    private javax.swing.JButton jBbuscar;
    private javax.swing.JComboBox jCBLocalididad;
    private javax.swing.JComboBox jCBSexo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelForm;
    private javax.swing.JPanel jPanelTabla;
    private javax.swing.JTextField jTFBusqueda;
    private java.util.List<madreteresacrud.floresVida.SociosFlorVida> list;
    private javax.swing.JLabel localidadLabel;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField nombreField;
    private javax.swing.JLabel nombreLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel sexoLabel;
    private javax.swing.JTextField telefonoField;
    private javax.swing.JLabel telefonoLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
