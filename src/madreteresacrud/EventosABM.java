/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package madreteresacrud;

import eao.EventosJpaController;
import eao.TipoEventoJpaController;
import eao.exceptions.NonexistentEntityException;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.persistence.Persistence.createEntityManagerFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import utilidades.Calendario;

/**
 *
 * @author francis
 */
public class EventosABM extends JPanel {

    private DefaultTableModel model;
    private final EventosJpaController eventosJpa;
    private final TipoEventoJpaController tipoEventoJpa;

    public EventosABM() {
        createModel();
        eventosJpa = new EventosJpaController(createEntityManagerFactory("madreTeresaCRUDPU"));
        tipoEventoJpa = new TipoEventoJpaController(createEntityManagerFactory("madreTeresaCRUDPU"));
        setModel(eventosJpa.findEventosEntities());
        initComponents();
        TipoEventoABM t = new TipoEventoABM();
        List<TipoEvento> tipoEvento = t.getTipoEvento();
        for (TipoEvento te : tipoEvento) {
            jComboBoxEvento.addItem(te.getDescripcion());
        }
        masterTable.getColumnModel().getColumn(6).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(6).setMinWidth(0);
        masterTable.getColumnModel().getColumn(6).setPreferredWidth(0);

        Date hoy = new Date();
        fechaDesde.setDate(hoy);
        fechaHasta.setDate(hoy);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor. SELECT e FROM Eventos e ORDER BY e.fecha
     * DESC
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("madreTeresaCRUDPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT e FROM Eventos e ORDER BY e.fecha DESC");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jPanelForm = new javax.swing.JPanel();
        motivoLabel = new javax.swing.JLabel();
        fechaLabel = new javax.swing.JLabel();
        montoPublicLabel = new javax.swing.JLabel();
        montoRifasLabel = new javax.swing.JLabel();
        montoTarjetasLabel = new javax.swing.JLabel();
        fechaField = new javax.swing.JTextField();
        montoPublicField = new javax.swing.JTextField();
        montoRifasField = new javax.swing.JTextField();
        montoTarjetasField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jButtonCalendar = new javax.swing.JButton();
        jComboBoxEvento = new javax.swing.JComboBox();
        jPanelTabla = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        fechaDesde = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fechaHasta = new com.toedter.calendar.JDateChooser();
        Buscar = new javax.swing.JButton();
        BuscarTodos = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        jPanelForm.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        motivoLabel.setText("Motivo del evento:");

        fechaLabel.setText("Fecha del evento:");

        montoPublicLabel.setText("Publicidad ($):");

        montoRifasLabel.setText("Rifas ($):");

        montoTarjetasLabel.setText("Tarjetas ($):");

        fechaField.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), fechaField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        fechaField.addMouseListener(formListener);

        montoPublicField.setToolTipText("Solo números y coma.");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), montoPublicField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        montoPublicField.addKeyListener(formListener);

        montoRifasField.setToolTipText("Solo números y coma.");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), montoRifasField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        montoRifasField.addKeyListener(formListener);

        montoTarjetasField.setToolTipText("Solo números y coma.");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), montoTarjetasField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        montoTarjetasField.addKeyListener(formListener);

        saveButton.setText("Guardar");
        saveButton.setEnabled(false);
        saveButton.addActionListener(formListener);

        refreshButton.setText("Cancelar");
        refreshButton.setEnabled(false);
        refreshButton.addActionListener(formListener);

        jButtonCalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/calendario.GIF"))); // NOI18N
        jButtonCalendar.setContentAreaFilled(false);
        jButtonCalendar.setEnabled(false);
        jButtonCalendar.addActionListener(formListener);

        jComboBoxEvento.setEnabled(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.motivo}"), jComboBoxEvento, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanelFormLayout = new javax.swing.GroupLayout(jPanelForm);
        jPanelForm.setLayout(jPanelFormLayout);
        jPanelFormLayout.setHorizontalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(refreshButton)
                        .addGap(43, 43, 43)
                        .addComponent(saveButton))
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(motivoLabel)
                                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaLabel)
                                    .addComponent(montoPublicLabel)
                                    .addComponent(montoRifasLabel)))
                            .addComponent(montoTarjetasLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFormLayout.createSequentialGroup()
                                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(montoTarjetasField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(montoRifasField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(montoPublicField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBoxEvento, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(397, Short.MAX_VALUE))
        );

        jPanelFormLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {refreshButton, saveButton});

        jPanelFormLayout.setVerticalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFormLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(montoPublicField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(montoRifasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(montoRifasLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(montoTarjetasField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(montoTarjetasLabel)))
                    .addGroup(jPanelFormLayout.createSequentialGroup()
                        .addComponent(fechaLabel)
                        .addGap(17, 17, 17)
                        .addComponent(montoPublicLabel)))
                .addGap(18, 18, 18)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(motivoLabel)
                    .addComponent(jComboBoxEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(saveButton))
                .addContainerGap())
        );

        jPanelTabla.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        masterTable.setAutoCreateRowSorter(true);
        masterTable.setModel(model);
        masterTable.addMouseListener(formListener);
        masterScrollPane.setViewportView(masterTable);

        deleteButton.setText("Eliminar");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        newButton.setText("Nuevo Evento");
        newButton.addActionListener(formListener);

        fechaDesde.setDateFormatString("dd-MM-yyyy");

        jLabel1.setText("Fecha Desde:");

        jLabel2.setText("Hasta:");

        fechaHasta.setDateFormatString("dd-MM-yyyy");

        Buscar.setText("Buscar");
        Buscar.addActionListener(formListener);

        BuscarTodos.setText("Buscar Todos");
        BuscarTodos.addActionListener(formListener);

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE))
                    .addGroup(jPanelTablaLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Buscar)
                .addGap(18, 18, 18)
                .addComponent(BuscarTodos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Buscar)
                        .addComponent(BuscarTodos))
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fechaDesde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fechaHasta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(newButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == saveButton) {
                EventosABM.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                EventosABM.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButtonCalendar) {
                EventosABM.this.jButtonCalendarActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                EventosABM.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                EventosABM.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == Buscar) {
                EventosABM.this.BuscarActionPerformed(evt);
            }
            else if (evt.getSource() == BuscarTodos) {
                EventosABM.this.BuscarTodosActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == montoPublicField) {
                EventosABM.this.montoPublicFieldKeyTyped(evt);
            }
            else if (evt.getSource() == montoRifasField) {
                EventosABM.this.montoRifasFieldKeyTyped(evt);
            }
            else if (evt.getSource() == montoTarjetasField) {
                EventosABM.this.montoTarjetasFieldKeyTyped(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == fechaField) {
                EventosABM.this.fechaFieldMouseClicked(evt);
            }
            else if (evt.getSource() == masterTable) {
                EventosABM.this.masterTableMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refrescarForm();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el registro?", "Eliminacion de Registro", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            int fila = masterTable.getSelectedRow();
            try {
                eventosJpa.destroy(Integer.valueOf(masterTable.getValueAt(fila, 6).toString()));
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(EventosABM.class.getName()).log(Level.SEVERE, null, ex);
            }
            refrescarForm();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        activarTextos(true);
        setEnabledBotones(true);
        masterTable.setEnabled(false);
        cleanFields();
    }//GEN-LAST:event_newButtonActionPerformed

    private void setEnabledBotones(boolean estado) {
        refreshButton.setEnabled(estado);
        saveButton.setEnabled(estado);
        newButton.setEnabled(!estado);
        jButtonCalendar.setEnabled(estado);
    }

    private void refrescarForm() {
        masterTable.setEnabled(true);
        setModel(eventosJpa.findEventosEntities());
        setEnabledBotones(false);
        activarTextos(false);
    }

    private void activarTextos(boolean estado) {
        fechaField.setEnabled(estado);
        montoPublicField.setEnabled(estado);
        montoRifasField.setEnabled(estado);
        montoTarjetasField.setEnabled(estado);
        jComboBoxEvento.setEnabled(estado);
    }

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (!blancos()) {
            int fila = masterTable.getSelectedRow();
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            if (fila != -1) {
                Eventos e = new Eventos(Integer.valueOf(masterTable.getValueAt(fila, 6).toString()));
                try {
                    e.setFecha(df.parse(fechaField.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(EventosABM.class.getName()).log(Level.SEVERE, null, ex);
                }
                e.setMontoPublic(BigDecimal.valueOf(Double.valueOf(montoPublicField.getText())));
                e.setMontoRifas(BigDecimal.valueOf(Double.valueOf(montoRifasField.getText())));
                e.setMontoTarjetas(BigDecimal.valueOf(Double.valueOf(montoTarjetasField.getText())));
                e.setMotivo(tipoEventoJpa.findEventoByDescripcion(jComboBoxEvento.getSelectedItem().toString()));
                try {
                    eventosJpa.edit(e);
                } catch (Exception ex) {
                    Logger.getLogger(EventosABM.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                Eventos e = new Eventos();
                try {
                    e.setFecha(df.parse(fechaField.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(EventosABM.class.getName()).log(Level.SEVERE, null, ex);
                }
                e.setMontoPublic(BigDecimal.valueOf(Double.valueOf(montoPublicField.getText())));
                e.setMontoRifas(BigDecimal.valueOf(Double.valueOf(montoRifasField.getText())));
                e.setMontoTarjetas(BigDecimal.valueOf(Double.valueOf(montoTarjetasField.getText())));
                e.setMotivo(tipoEventoJpa.findEventoByDescripcion(jComboBoxEvento.getSelectedItem().toString()));

                eventosJpa.create(e);
            }
            setModel(eventosJpa.findEventosEntities());
            refrescarForm();
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private Boolean blancos() {
        if (fechaField.getText().trim().isEmpty()
                || (jComboBoxEvento.getSelectedItem() == null)
                || (montoPublicField.getText().trim().isEmpty()
                && montoRifasField.getText().trim().isEmpty()
                && montoTarjetasField.getText().trim().isEmpty())) {
            mensaje();
            return true;
        } else {
            return false;
        }
    }

    private void mensaje() {
        String respuesta = "";
        if (fechaField.getText().trim().isEmpty()) {
            respuesta = respuesta + " " + "Fecha," + " ";
        }
        if (jComboBoxEvento.getSelectedItem() == null) {
            respuesta = respuesta + " " + "Motivo," + " ";
        }
        if (montoPublicField.getText().trim().isEmpty()
                && montoRifasField.getText().trim().isEmpty()
                && montoTarjetasField.getText().trim().isEmpty()) {
            respuesta = respuesta + " " + "Montos en su totalidad," + " ";
        }

        JOptionPane.showMessageDialog(null, "Los campos " + respuesta + "no deberian estar vacios!");
    }

    private void jButtonCalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalendarActionPerformed
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this), true, fechaField).setVisible(true);
    }//GEN-LAST:event_jButtonCalendarActionPerformed

    private void montoPublicFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_montoPublicFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_montoPublicFieldKeyTyped

    private void montoRifasFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_montoRifasFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_montoRifasFieldKeyTyped

    private void montoTarjetasFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_montoTarjetasFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_montoTarjetasFieldKeyTyped

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        if (masterTable.isEnabled()) {
            jComboBoxEvento.setEnabled(true);
            setEnabledBotones(true);
            activarTextos(true);
            setFields();
        }
    }//GEN-LAST:event_masterTableMouseClicked

    private void fechaFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaFieldMouseClicked
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this), true, fechaField).setVisible(true);
    }//GEN-LAST:event_fechaFieldMouseClicked

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        if (fechaDesde.getDate().before(fechaHasta.getDate()) || fechaDesde.getDate().equals(fechaHasta.getDate())) {
            SimpleDateFormat formatoDelTexto = new SimpleDateFormat(fechaDesde.getDateFormatString());
            String fDesde = formatoDelTexto.format(fechaDesde.getDate());
            String fHasta = formatoDelTexto.format(fechaHasta.getDate());
            String[] fd = fDesde.split("-");
            String[] fh = fHasta.split("-");
            setModel(eventosJpa.findByRangeDate(fd[2] + "-" + fd[1] + "-" + fd[0], fh[2] + "-" + fh[1] + "-" + fh[0]));
            activarTextos(false);
        } else {
            JOptionPane.showMessageDialog(null, "El periodo de fecha ingresado no es válido.");
        }

    }//GEN-LAST:event_BuscarActionPerformed

    private void BuscarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarTodosActionPerformed
        setModel(eventosJpa.findEventosEntities());
        activarTextos(false);

    }//GEN-LAST:event_BuscarTodosActionPerformed

//    Converter dateConverter = new Converter<java.util.Date, String>() {
//        @Override
//        public String convertForward(java.util.Date value) {
//            String patron = "dd/MM/yyyy";
//            SimpleDateFormat formato = new SimpleDateFormat(patron);
//            return formato.format(value);
//        }
//
//        @Override
//        public java.util.Date convertReverse(String value) {
//            try {
//                DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
//                return df.parse(value);
//            } catch (ParseException e) {
//                System.err.println("Error de dateConverter: " + e.getMessage());
//                return Calendar.getInstance().getTime();
//            }
//        }
//    };

    private void createModel() {
        String[] titulos = {"Fecha del Evento", "Publicidad ($)", "Rifas ($)", "Tarjetas ($)", "Recaudación Total ($)", "Motivo Del Evento", "idEvento"};
        model = new DefaultTableModel(null, titulos);
    }

    private void setModel(List<Eventos> eventos) {
        model.setRowCount(0);
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
        String[] registros = new String[7];
        for (Eventos e : eventos) {
            registros[0] = formatofecha.format(e.getFecha());
            registros[1] = e.getMontoPublic().toString();
            registros[2] = e.getMontoRifas().toString();
            registros[3] = e.getMontoTarjetas().toString();
            registros[4] = e.getMontoPublic().add(e.getMontoRifas()).add(e.getMontoTarjetas()).toString();
            registros[5] = e.getMotivo().toString();
            registros[6] = e.getIdEvento().toString();
            model.addRow(registros);
        }
    }

    private void setFields() {
        int filaMod = masterTable.getSelectedRow();
        if (filaMod == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione alguna fila.");
        } else {
            fechaField.setText(masterTable.getValueAt(filaMod, 0).toString());
            montoPublicField.setText(masterTable.getValueAt(filaMod, 1).toString());
            montoRifasField.setText(masterTable.getValueAt(filaMod, 2).toString());
            montoTarjetasField.setText(masterTable.getValueAt(filaMod, 3).toString());
            jComboBoxEvento.setSelectedItem(masterTable.getValueAt(filaMod, 5));
        }
    }

    private void cleanFields() {
        fechaField.setText("");
        montoPublicField.setText("");
        montoRifasField.setText("");
        montoTarjetasField.setText("");
        jComboBoxEvento.setSelectedIndex(0);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton BuscarTodos;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private com.toedter.calendar.JDateChooser fechaDesde;
    private javax.swing.JTextField fechaField;
    private com.toedter.calendar.JDateChooser fechaHasta;
    private javax.swing.JLabel fechaLabel;
    private javax.swing.JButton jButtonCalendar;
    private javax.swing.JComboBox jComboBoxEvento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelForm;
    private javax.swing.JPanel jPanelTabla;
    private java.util.List<madreteresacrud.Eventos> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField montoPublicField;
    private javax.swing.JLabel montoPublicLabel;
    private javax.swing.JTextField montoRifasField;
    private javax.swing.JLabel montoRifasLabel;
    private javax.swing.JTextField montoTarjetasField;
    private javax.swing.JLabel montoTarjetasLabel;
    private javax.swing.JLabel motivoLabel;
    private javax.swing.JButton newButton;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
