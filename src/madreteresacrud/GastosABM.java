/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package madreteresacrud;

import eao.GastosJpaController;
import eao.TipoGastoJpaController;
import eao.exceptions.NonexistentEntityException;
import java.awt.Toolkit;
import java.beans.Beans;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.persistence.Persistence.createEntityManagerFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import utilidades.Calendario;

/**
 *
 * @author francis
 */
public class GastosABM extends JPanel {

    private DefaultTableModel model;
    private final GastosJpaController gastosJpa;
    private final TipoGastoJpaController tipoGJpa;

    public GastosABM() {
        createModel();
        gastosJpa = new GastosJpaController(createEntityManagerFactory("madreTeresaCRUDPU"));
        tipoGJpa = new TipoGastoJpaController(createEntityManagerFactory("madreTeresaCRUDPU"));
        setModel(gastosJpa.findGastosEntities());
        initComponents();

        masterTable.getColumnModel().getColumn(4).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(4).setMinWidth(0);
        masterTable.getColumnModel().getColumn(4).setPreferredWidth(0);
        masterTable.getColumnModel().getColumn(5).setMaxWidth(0);
        masterTable.getColumnModel().getColumn(5).setMinWidth(0);
        masterTable.getColumnModel().getColumn(5).setPreferredWidth(0);
        jComboBoxElemento.setEnabled(false);
        jComboBoxTipoGasto.setEnabled(false);

        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor. ORDER BY g.fechaGasto DESC
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("madreTeresaCRUDPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT g FROM Gastos g");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        jPanelTabla = new javax.swing.JPanel();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        jPanelForm = new javax.swing.JPanel();
        idgastosLabel = new javax.swing.JLabel();
        montoLabel = new javax.swing.JLabel();
        fechaGastoLabel = new javax.swing.JLabel();
        descripcionLabel = new javax.swing.JLabel();
        tipoGastoIdtipoGastoLabel = new javax.swing.JLabel();
        montoField = new javax.swing.JTextField();
        fechaGastoField = new javax.swing.JTextField();
        descripcionField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jComboBoxTipoGasto = new javax.swing.JComboBox();
        jComboBoxElemento = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        jPanelTabla.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        masterTable.setAutoCreateRowSorter(true);
        masterTable.setModel(model    );
        masterTable.addMouseListener(formListener);
        masterScrollPane.setViewportView(masterTable);

        deleteButton.setText("Eliminar");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);

        newButton.setText("Nuevo Gasto");
        newButton.addActionListener(formListener);

        javax.swing.GroupLayout jPanelTablaLayout = new javax.swing.GroupLayout(jPanelTabla);
        jPanelTabla.setLayout(jPanelTablaLayout);
        jPanelTablaLayout.setHorizontalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablaLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(newButton)
                .addGap(29, 29, 29)
                .addComponent(deleteButton)
                .addContainerGap(298, Short.MAX_VALUE))
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanelTablaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deleteButton, newButton});

        jPanelTablaLayout.setVerticalGroup(
            jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTablaLayout.createSequentialGroup()
                .addContainerGap(229, Short.MAX_VALUE)
                .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(newButton))
                .addContainerGap())
            .addGroup(jPanelTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelTablaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(masterScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(53, Short.MAX_VALUE)))
        );

        jPanelForm.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelForm.setEnabled(false);

        idgastosLabel.setText("Item:");

        montoLabel.setText("Monto($):");

        fechaGastoLabel.setText("Fecha del Gasto:");

        descripcionLabel.setText("Descripción:");

        tipoGastoIdtipoGastoLabel.setText("Tipo de Gasto:");

        montoField.setToolTipText("Solo números y coma.");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), montoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        montoField.addKeyListener(formListener);

        fechaGastoField.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), fechaGastoField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        fechaGastoField.addMouseListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), descripcionField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        saveButton.setText("Guardar");
        saveButton.setEnabled(false);
        saveButton.addActionListener(formListener);

        refreshButton.setText("Cancelar");
        refreshButton.setEnabled(false);
        refreshButton.addActionListener(formListener);

        jComboBoxTipoGasto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HOGAR", "COMISIÓN" }));
        jComboBoxTipoGasto.setEnabled(false);
        jComboBoxTipoGasto.addActionListener(formListener);

        jComboBoxElemento.setEnabled(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/calendario.GIF"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setEnabled(false);
        jButton1.addActionListener(formListener);

        javax.swing.GroupLayout jPanelFormLayout = new javax.swing.GroupLayout(jPanelForm);
        jPanelForm.setLayout(jPanelFormLayout);
        jPanelFormLayout.setHorizontalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(refreshButton)
                .addGap(31, 31, 31)
                .addComponent(saveButton)
                .addContainerGap(345, Short.MAX_VALUE))
            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelFormLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(idgastosLabel)
                        .addComponent(montoLabel)
                        .addComponent(fechaGastoLabel)
                        .addComponent(descripcionLabel)
                        .addComponent(tipoGastoIdtipoGastoLabel))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(descripcionField, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                        .addGroup(jPanelFormLayout.createSequentialGroup()
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(fechaGastoField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(montoField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxTipoGasto, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxElemento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 40, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanelFormLayout.setVerticalGroup(
            jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFormLayout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton)
                    .addComponent(saveButton))
                .addGap(20, 20, 20))
            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelFormLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tipoGastoIdtipoGastoLabel)
                        .addComponent(jComboBoxTipoGasto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(idgastosLabel)
                        .addComponent(jComboBoxElemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelFormLayout.createSequentialGroup()
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(montoLabel)
                                .addComponent(montoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fechaGastoLabel)
                                .addComponent(fechaGastoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(descripcionLabel)
                        .addComponent(descripcionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(70, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.KeyListener, java.awt.event.MouseListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == deleteButton) {
                GastosABM.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                GastosABM.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                GastosABM.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                GastosABM.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jComboBoxTipoGasto) {
                GastosABM.this.jComboBoxTipoGastoActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                GastosABM.this.jButton1ActionPerformed(evt);
            }
        }

        public void keyPressed(java.awt.event.KeyEvent evt) {
        }

        public void keyReleased(java.awt.event.KeyEvent evt) {
        }

        public void keyTyped(java.awt.event.KeyEvent evt) {
            if (evt.getSource() == montoField) {
                GastosABM.this.montoFieldKeyTyped(evt);
            }
        }

        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == masterTable) {
                GastosABM.this.masterTableMouseClicked(evt);
            }
            else if (evt.getSource() == fechaGastoField) {
                GastosABM.this.fechaGastoFieldMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refrescarForm();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int reply = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar el registro?", "Eliminacion de Registro", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Registro Eliminado");
            int fila = masterTable.getSelectedRow();
            try {
                gastosJpa.destroy(Integer.valueOf(masterTable.getValueAt(fila, 4).toString()));
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(GastosABM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        refrescarForm();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        setEnabledBotones(true);
        activarTextos(true);
        masterTable.setEnabled(false);
        cleanFields();
    }//GEN-LAST:event_newButtonActionPerformed

    private void activarTextos(boolean estado) {
        fechaGastoField.setEnabled(estado);
        descripcionField.setEnabled(estado);
        jComboBoxTipoGasto.setEnabled(estado);
        montoField.setEnabled(estado);
        jComboBoxElemento.setEnabled(estado);
    }

    private void setEnabledBotones(boolean estado) {
        jButton1.setEnabled(estado);
        deleteButton.setEnabled(estado);
        refreshButton.setEnabled(estado);
        saveButton.setEnabled(estado);
        newButton.setEnabled(!estado);
    }

    private void refrescarForm() {
        masterTable.setEnabled(true);
        setModel(gastosJpa.findGastosEntities());
        setEnabledBotones(false);
        activarTextos(false);
    }


    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (!blancos()) {
            int fila = masterTable.getSelectedRow();
            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            if (fila != -1) {
                Gastos g = new Gastos(Integer.valueOf(masterTable.getValueAt(fila, 4).toString()));
                try {
                    g.setFechaGasto(df.parse(fechaGastoField.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(GastosABM.class.getName()).log(Level.SEVERE, null, ex);
                }
                g.setMonto(BigDecimal.valueOf(Double.valueOf(montoField.getText())));
                g.setDescripcion(descripcionField.getText());
                g.setTipoGastoIdtipoGasto(getTipoGasto(jComboBoxTipoGasto.getSelectedItem().toString(), jComboBoxElemento.getSelectedItem().toString()));
                try {
                    gastosJpa.edit(g);
                } catch (Exception ex) {
                    Logger.getLogger(GastosABM.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                Gastos g = new Gastos();
                try {
                    g.setFechaGasto(df.parse(fechaGastoField.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(GastosABM.class.getName()).log(Level.SEVERE, null, ex);
                }
                g.setMonto(BigDecimal.valueOf(Double.valueOf(montoField.getText())));
                g.setDescripcion(descripcionField.getText());
                g.setTipoGastoIdtipoGasto(getTipoGasto(jComboBoxTipoGasto.getSelectedItem().toString(), jComboBoxElemento.getSelectedItem().toString()));
                gastosJpa.create(g);
            }
            setModel(gastosJpa.findGastosEntities());
            refrescarForm();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private Boolean blancos() {
        if ((fechaGastoField.getText().trim().isEmpty())
                || (montoField.getText().trim().isEmpty())) {
            mensaje();
            return true;
        } else {
            return false;
        }
    }

    private void mensaje() {
        String respuesta = "";
        if (montoField.getText().trim().isEmpty()) {
            respuesta = respuesta + " " + "Monto," + " ";
        }
        if (fechaGastoField.getText().trim().isEmpty()) {
            respuesta = respuesta + " " + "Fecha," + " ";
        }

        JOptionPane.showMessageDialog(null, "Los campos" + respuesta + "no deberian estar vacios!");
    }

    private void jComboBoxTipoGastoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoGastoActionPerformed

        String tipo = jComboBoxTipoGasto.getSelectedItem().toString().trim();
        setComboItem(tipo);
    }//GEN-LAST:event_jComboBoxTipoGastoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this), true, fechaGastoField).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void montoFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_montoFieldKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) && evt.getKeyChar() != '.') {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_montoFieldKeyTyped

    private void fechaGastoFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechaGastoFieldMouseClicked
        new Calendario((JFrame) SwingUtilities.getWindowAncestor(this), true, fechaGastoField).setVisible(true);
    }//GEN-LAST:event_fechaGastoFieldMouseClicked

    private void masterTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterTableMouseClicked
        if (masterTable.isEnabled()) {
            setEnabledBotones(true);
            activarTextos(true);
            setFields();
        }
    }//GEN-LAST:event_masterTableMouseClicked

    private void setComboItem(String tipoGasto) {
        jComboBoxElemento.removeAllItems();
        javax.persistence.Query queryGasto = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT DISTINCT t.elemento FROM TipoGasto t WHERE t.tipoGasto='" + tipoGasto + "'");
        java.util.List<String> data = queryGasto.getResultList();
        for (String ite : data) {
            jComboBoxElemento.addItem(ite);
        }
        jComboBoxElemento.setSelectedIndex(0);

    }

    private TipoGasto getTipoGasto(String tipo, String item) {

        javax.persistence.Query queryGasto = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT DISTINCT t FROM TipoGasto t WHERE t.tipoGasto='" + tipo + "' AND t.elemento='" + item + "'");
        java.util.List<TipoGasto> data = queryGasto.getResultList();
        TipoGasto tipoG = null;
        for (TipoGasto ite : data) {
            tipoG = ite;

        }

        return tipoG;
    }

    private void setCombos(TipoGasto tipoG) {
        jComboBoxTipoGasto.setSelectedItem(tipoG.getTipoGasto());
        jComboBoxElemento.setSelectedItem(tipoG.getElemento());

    }
//    Converter tipoGastoConverter = new Converter<TipoGasto, String>() {
//        @Override
//        public TipoGasto convertReverse(String value) {
//            try {
//                return UtilsStatics.findTipoGasto(Integer.valueOf(value));
//            } catch (Exception e) {
//                System.err.println(e);
//                return null;
//            }
//        }
//
//        @Override
//        public String convertForward(TipoGasto value) {
//            return value.getIdtipoGasto().toString();
//        }
//    };

    private void cleanFields() {
        jComboBoxTipoGasto.setSelectedIndex(0);
        setComboItem(jComboBoxTipoGasto.getSelectedItem().toString().trim());
        jComboBoxElemento.setSelectedIndex(0);
        fechaGastoField.setText("");
        montoField.setText("");
        descripcionField.setText("");
    }

    private void setFields() {
        int filaMod = masterTable.getSelectedRow();
        if (filaMod == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione alguna fila.");
        } else {
            fechaGastoField.setText(masterTable.getValueAt(filaMod, 1).toString());
            montoField.setText(masterTable.getValueAt(filaMod, 2).toString());
            descripcionField.setText(masterTable.getValueAt(filaMod, 3) != null ? masterTable.getValueAt(filaMod, 3).toString() : "");
            setCombos(tipoGJpa.findTipoGasto(Integer.valueOf(masterTable.getValueAt(filaMod, 5).toString())));
        }
    }

    private void setModel(List<Gastos> gastos) {
        model.setRowCount(0);
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/YYYY");
        String[] registros = new String[6];
        for (Gastos g : gastos) {
            registros[0] = g.getTipoGastoIdtipoGasto().getElemento();
            registros[1] = formatofecha.format(g.getFechaGasto());
            registros[2] = g.getMonto().toString();
            registros[3] = g.getDescripcion();
            registros[4] = g.getIdgastos().toString();
            registros[5] = g.getTipoGastoIdtipoGasto().getIdtipoGasto().toString();
            model.addRow(registros);
        }
    }

    private void createModel() {
        String[] titulos = {"Item", "Fecha del Gasto", "Monto ($)", "Descripción", "IdGasto", "IdTipoG"};
        model = new DefaultTableModel(null, titulos) {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField descripcionField;
    private javax.swing.JLabel descripcionLabel;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField fechaGastoField;
    private javax.swing.JLabel fechaGastoLabel;
    private javax.swing.JLabel idgastosLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBoxElemento;
    private javax.swing.JComboBox jComboBoxTipoGasto;
    private javax.swing.JPanel jPanelForm;
    private javax.swing.JPanel jPanelTabla;
    private java.util.List<madreteresacrud.Gastos> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JTextField montoField;
    private javax.swing.JLabel montoLabel;
    private javax.swing.JButton newButton;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel tipoGastoIdtipoGastoLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
